{% extends "Community/layout.html.twig" %}

{% block title %}  Communauté - Evènements {% endblock %}

{% block meta %}
  <meta name="description" content="Participez à un évènement organisé par les espaces de coworking partenaires de Becowo">
  <meta property="og:title" content="Becowo - Les évènements" />
  <meta property="og:url" content="{{ app.request.uri }}" />
  <meta property="og:image" content="https://becowo.com/images/Emails/Logo_becowo.png" />
  <meta property="og:description" content="Participez à un évènement organisé par les espaces de coworking partenaires de Becowo" />
{% endblock %}

{% block content %}
<h1>Les Evènements</h1>
<div id="filtersBar">
  <div class="row">
    <div class="col-lg-3 col-md-3 col-sm-3 hidden-xs">
        <h3>Région</h3>
        <div id="workspaceRegion" class="facet"></div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3">
        <h3>Ville</h3>
        <div id="workspaceCity" class="facet"></div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 hidden-xs">
      <h3>Coworking</h3>
      <div id="workspaceName" class="facet"></div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 hidden-xs">
      <h3 style="margin-left:0;">Date</h3>
        <div id="eventDate"></div>
    </div>  
  </div>
  <div class="row hidden-xs">
    <span id="stats"></span> <span id="clear-all"></span> 
  </div>
</div>

<div class="row">
    <div id="hits" class="events"><center>Chargement en cours <img src="{{ asset('images/icons/loading.gif') }}" alt="loading"></center></div>
</div>
{# Ici on ne pagine pas sinon le filtre par date bug quand on est dans les pages > 1 #}

{% endblock content %}

{% block javascripts %}
<script>
  // Documentation : https://www.algolia.com/doc/guides/search/instant-search/

  var search = instantsearch({
    appId: "{{ algolia.application_id }}",
    apiKey: "{{ algolia.search_api_key }}", // search only API key, no ADMIN key
    indexName: "{{ algolia.index_event }}",
    urlSync: true
  });
  
  search.addWidget(
    instantsearch.widgets.hits({
      container: '#hits',
      hitsPerPage: 50,
      templates: {
        item: function(data) {
          
          var id = '';
          if(data.id !== null){ id = data.id }else{ id = ''};

          var wsName = '';
          if(data.workspace !== null){ wsName = data.workspace.name }else{ wsName = ''};

          var startDate = '';
          if(data.startDate !== null){ startDate = data.startDate.date }else{ startDate = ''};

          var endDate = '';
          if(data.endDate !== null){ endDate = data.endDate.date }else{ endDate = ''};

          var city = '';
          if(data.workspace !== null){ city = data.workspace.city }else{ city = ''};

          var region = '';
          if(data.workspace !== null){ region = data.workspace.region.name }else{ region = ''};

          var title = '';
          if(data.title !== null){ title = data.title }else{ title = ''};

          var description = '';
          if(data.description !== null){ description = data.description }else{ description = ''};

          var category = '';
          if(data.category !== null){ category = data.category.name }else{ category = ''};

          var facebookId = '';
          if(data.facebookId !== null){ facebookId = data.facebookId }else{ facebookId = ''};

          var picture = '';
          if(data.picture !== null){ picture = data.picture }else{ picture = ''};

          var vignette = '<div class="event"><div class="row"><div class="col-lg-3 col-md-4 col-sm-4">';

          if(category != '')
          {
            divPhoto = '<div class="photo" style="background-image:url(\'{{ asset("images/icons/events/")}}' + category + '.png);';
          }else{
            divPhoto = '<div class="photo" style="background-image:url(' + picture + ');';
          }
          divPhoto = divPhoto + 
              'width:200px;' +
              'height:150px;' +
              'background-position:center;' +
              'background-size: cover;' +
              'margin-top: 20px;">&nbsp;</div>' + 
              '</div>';

          vignette = vignette + divPhoto;

          var url = '<a href="{{ path("becowo_core_workspace", { 'region':'paramRegion', 'ville' : 'paramCity', 'name': 'paramName' }) }}">';
          url = url.replace("paramRegion", region.replace('-', ' '));
          url = url.replace("paramCity", city.replace('-', ' '));
          url = url.replace("paramName", wsName);

          vignette = vignette + 
            '<div class="col-lg-9 col-md-8 col-sm-8">' +
            '<div class="info">' +
              '<span class="title">' + title + '</span><br>' +
                '<span class="place">' +
                  url +
                  '<i class="fa fa-home" aria-hidden="true"></i>' + wsName + ' à ' + city +
                  '</a>' +
                '</span><br>' +
                '<span class="time">' +
                  '<i class="fa fa-calendar" aria-hidden="true"></i>' +
                  afficheDate(startDate, endDate) +
                '</span><br><br>' +
                '<p>' + 
                  TextAbstract(nl2br(description), 200) +
                  '<a href="#" data-toggle="modal" data-target="#myModalEvent-' + id + '">[voir plus]</a>' + 
                '</p>' +
            '</div>' +
            '</div>';

            linkFB = '';
            if(facebookId != ''){
              linkFB = '<hr style="margin: 0;"> <a href="http://facebook.com/' + facebookId + '" class="participate" target="_blank"><i class="fa fa-thumbs-up" aria-hidden="true"></i> Participer</a>'; 
            }

            vignette = vignette + '</div><div class="row text-center">' + linkFB + '</div>' ;
            
            var modal = '<div class="modal fade modalEvent" id="myModalEvent-' + id + '" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">' +
              '<div class="modal-dialog">' +
                '<div class="modal-content">' +
                  '<div class="modal-header">' +
                      '<button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>' +
                      '<h4 class="modal-title">' + title + '</h4>' +
                  '</div>' +
                  '<div class="modal-body" style="overflow-y: scroll;">' +
                  '<div class="row">' +
                  '<div class="col-lg-5 col-md-5 col-sm-5">' +
                    divPhoto +
                    '<div class="col-lg-7 col-md-7 col-sm-7">' +
                    '<div class="info"><br>' +
                      '<span class="title">' + title + '</span><br>' +
                      '<span class="place">' +
                        url +
                        '<i class="fa fa-home" aria-hidden="true"></i>' + wsName + ' à ' + city +
                        '</a>' +
                      '</span><br>' +
                      '<span class="time">' +
                        '<i class="fa fa-calendar" aria-hidden="true"></i>' +
                        afficheDate(startDate, endDate) +
                      '</span><br><br>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div class="row">' +
                      '<p>' + nl2br(description) + '</p>' +
                      linkFB +
                  '</div>' +
                  '</div>' +
                  '</div>' +
                '</div>' +
              '</div>' +
          '</div></div>';

          return vignette + ' ' + modal;
        },
        empty: function(data) {
          return '<p>Désolé ! Aucun évènement trouvé pour la recherche <em>' + data.query + '</em>.</p>'
        }
      }
    })
  );

  search.addWidget(
    instantsearch.widgets.stats({
      container: '#stats',
      templates: {
        body: function(data) {
          return '<div>' + data.nbHits + ' évènements trouvés.</div>'
        }
      }
    })
  );

  // search.addWidget(
  //   instantsearch.widgets.sortBySelector({
  //     container: '#sort-by',
  //     autoHideContainer: true, //automatically hide the widget when there are no results to display
  //     indices: [{
  //       name: search.indexName, label: 'Fill rate'
  //     }, {
  //       name: search.indexName + '_sort_firstname_asc', label: 'Prénom Asc'
  //     }]
  //   })
  // );

  search.addWidget(
    instantsearch.widgets.refinementList({
      container: '#workspaceRegion',
      attributeName: 'workspace.region.name',
      limit: 10,
      sortBy: ['count:desc', 'name:asc'],
      operator: 'or',
      autoHideContainer: false,
      templates: {
        item: function(data) {
          return '<label for="' + data.name + '" class="ais-refinement-list--label">' + data.name + ' (' + data.count + ')' +
          '<input id="' + data.name + '" type="checkbox" value="' + data.name + '" class="ais-refinement-list--checkbox" />' +
          '<span></span>' +
                '</label>'
        }
      }
    })
  );
  search.addWidget(
    instantsearch.widgets.refinementList({
      container: '#workspaceName',
      attributeName: 'workspace.name',
      limit: 10,
      sortBy: ['count:desc', 'name:asc'],
      operator: 'or',
      autoHideContainer: false,
      templates: {
        item: function(data) {
          return '<label for="' + data.name + '" class="ais-refinement-list--label">' + data.name + ' (' + data.count + ')' +
          '<input id="' + data.name + '" type="checkbox" value="' + data.name + '" class="ais-refinement-list--checkbox" />' +
          '<span></span>' +
                '</label>'
        }
      }
    })
  );
  search.addWidget(
    instantsearch.widgets.refinementList({
      container: '#workspaceCity',
      attributeName: 'workspace.city',
      limit: 10,
      sortBy: ['count:desc', 'name:asc'],
      operator: 'or',
      autoHideContainer: false,
      templates: {
        item: function(data) {
          return '<label for="' + data.name + '" class="ais-refinement-list--label">' + data.name + ' (' + data.count + ')' +
          '<input id="' + data.name + '" type="checkbox" value="' + data.name + '" class="ais-refinement-list--checkbox" />' +
          '<span></span>' +
                '</label>'
        }
      }
    })
  );

  // get current date ---- run test on https://www.epochconverter.com/
  // Time are finally used in Epoch timestamp
  var curr = new Date; 
  // First day is the day of the month - the day of the week (+1 to start week on monday)
  var first = curr.getDate() - curr.getDay() + 1; 
  var lastdayOfWeek = new Date(new Date(Date.now()).setDate(first + 6));
  var lastDayOfMonth = new Date(curr.getFullYear(), curr.getMonth()+1, 0); // jour 0 renvoi le dernier jour du mois précédent
  
  if (curr.getMonth() == 11) {
    var nextMonth = new Date(curr.getFullYear() + 1, 0, 1);
  } else {
    var nextMonth = new Date(curr.getFullYear(), curr.getMonth() + 1, 1);
  }

  var thisMorning = Math.round(new Date(Date.now()).setHours(1) / 1000);
  var endOfWeek = Math.round(new Date(lastdayOfWeek.setHours(23)).getTime() / 1000);
  var endOfMonth = Math.round(new Date(lastDayOfMonth.setHours(23)).getTime() / 1000);
  var beginOfNextMonth = Math.round(new Date(nextMonth).getTime() / 1000);

  search.addWidget(
  instantsearch.widgets.numericRefinementList({
    container: '#eventDate',
    attributeName: 'startDateTimeStamp',
    autoHideContainer: false,
    options: [
      {name: ' Tous'},
      {start: thisMorning, end: endOfWeek, name: ' Cette semaine'},
      {start: Date.now() / 1000, end: endOfMonth, name: ' Ce mois ci'}, // bug si on remet thisMorning
      {start: beginOfNextMonth, name: ' Le mois prochain'}
    ]
  })
);

  search.addWidget(
    instantsearch.widgets.clearAll({
    container: '#clear-all',
    templates: {
      link: 'Effacer les filtres'
    },
      autoHideContainer: false
    })
  );

  search.start();


  function TextAbstract(text, length) {
    if (text == null) {
        return "";
    }
    if (text.length <= length) {
        return text;
    }
      text = text.substring(0, length);
      last = text.lastIndexOf(" ");
      text = text.substring(0, last);
      return text + "...";
  }

  function afficheDate(debut, fin)
  {
    if(getDate(debut) == getDate(fin))
      return ' Le ' + getDate(debut) + ' de ' + getHeure(debut) + ' à ' + getHeure(fin);
    else
      return ' Du ' + getDate(debut) + ' à ' + getHeure(debut) + ' au ' + getDate(fin) + ' à ' + getHeure(fin);
  }

  function getDate(chaine){
    var d = chaine.split(' ');
    var datecoupe = d[0].split('-');
    return datecoupe[2] + '/' + datecoupe[1] + '/' + datecoupe[0];
  }

  function getHeure(chaine){
    var d = chaine.split(' ');
    var datecoupe = d[1].split(':');
    return datecoupe[0] + 'h' + datecoupe[1];
  }

  function nl2br (chaine) {
    return (chaine + '').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, '$1' + '<br>' + '$2');
  }

</script>
{% endblock javascripts %}

