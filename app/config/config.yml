imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BecowoCoreBundle/Resources/config/services.yml" }
    - { resource: "@BecowoMemberBundle/Resources/config/services.yml" }
    - { resource: "@BecowoManagerBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'bootstrap_3_horizontal_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# FOSUser configuration
fos_user:
    db_driver:     orm                              # Le type de BDD à utiliser, nous utilisons l'ORM Doctrine depuis le début
    firewall_name: main                             # Le nom du firewall derrière lequel on utilisera ces utilisateurs
    user_class:    Becowo\MemberBundle\Entity\Member # La classe de l'entité User que nous utilisons
    profile:
        form:
            type: Becowo\MemberBundle\Form\ProfileType

# Elastic search configuration
fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    serializer:
        callback_class: FOS\ElasticaBundle\Serializer\Callback
        serializer: serializer
    indexes:
        becowo:
            index-name: becowo_%kernel.environment%
            settings:
                index:
                    analysis:
                        analyzer:
                            autocomplete_analyzer:
                                type: custom
                                tokenizer: autocomplete_tokenizer
                                filter: [lowercase, asciifolding]
                        tokenizer:
                            autocomplete_tokenizer:
                                type: nGram
                                min_gram: 3
                                max_gram: 20
            types:
                workspace:
                    mappings:
                        name: { type: string, analyzer: autocomplete_analyzer }
                    persistence:
                        driver: orm
                        model: Becowo\CoreBundle\Entity\Workspace
                        provider:
                            query_builder_method : findActiveWorkspaces
                        listener: ~
                        finder: ~

# vich/uploader-bundle / Easy to upload pictures
vich_uploader:
    db_driver: orm
    mappings:
        member_profile_picture:
            uri_prefix:         /images/ProfilePictures
            upload_destination: %kernel.root_dir%/../web/images/ProfilePictures

# EasyAdmin bundle
easy_admin:
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'
    list:
        actions:
            - { name: 'show', icon: 'search', label: '' }
            - { name: 'edit', icon: 'pencil', label: '' }
            - { name: 'delete', icon: 'remove', label: '' }            
    entities:
        Workspace:
            class: Becowo\CoreBundle\Entity\Workspace
            list:
                fields: ['id', 'name', 'description', 'descriptionBonus', { property: 'website', type: 'url' }, 'isAlwaysOpen', 'longitude', 'latitude', 'isVisible', 'isDeleted']
        Workspace_Category:
            class: Becowo\CoreBundle\Entity\WorkspaceCategory
        Workspace_Favorite:
            class: Becowo\CoreBundle\Entity\WorkspaceFavorite
            form:
                fields: ['workspace']
        Picture:
            class: Becowo\CoreBundle\Entity\Picture
        Office:
            class: Becowo\CoreBundle\Entity\Office
        Booking:
            class: Becowo\CoreBundle\Entity\Booking
            list:
                fields:
                    - 'id'
                    - { property: 'workspace.name', label: 'Workspace' }
                    - { property: 'member.username', label: 'Member' }
                    - 'startDate'
                    - 'endDate'
                    - 'priceInclTax'
                    - 'priceExclTax'
                    - 'isFirstBook'
                    - { property: 'CreatedOn', type: 'datetime'}
        Booking_Status:
            class: Becowo\CoreBundle\Entity\Status
        Member:
            class: Becowo\MemberBundle\Entity\Member
            list:
                fields: ['id', 'username', 'firstName', 'name', { property: 'email', type: 'email' }, 'profilePicture', 'lastLogin', 'enabled', 'locked']
            form:
                fields: 
                    - { property: 'username', type: 'text' }
                    - { property: 'firstName', type: 'text' }
                    - { property: 'name', type: 'text' }
                    - { property: 'email', type: 'email' }
                    - { property: 'plainPassword', type: 'password', label: 'Password' }
                    - { property: 'enabled', type: 'checkbox' }
                    - { property: 'locked', type: 'checkbox' }
                    - { property: 'roles' }
        ProfilePicture:
            class: Becowo\CoreBundle\Entity\ProfilePicture
            # TO DO corriger affichage image
            list:
                fields: ['id', { property: 'file', type: 'image', base_path: "% vich_uploader.mappings.member_profile_picture%"}, 'url', 'alt']
            form:
                fields: [{ property: 'url', format: 'image', base_path: '/images/ProfilePicture/' }, 'alt', { property: 'file', type: 'file', label: 'Upload Picture', help: 'Select file to upload' }]
        Poi:
            class: Becowo\CoreBundle\Entity\Poi
        Poi_Category:
            class: Becowo\CoreBundle\Entity\PoiCategory
        Amenities:
            class: Becowo\CoreBundle\Entity\Amenities
            form:
                fields: ['name']
        TeamMember:
            class: Becowo\CoreBundle\Entity\TeamMember
        Vote:
            class: Becowo\CoreBundle\Entity\Vote
        Comment:
            class: Becowo\CoreBundle\Entity\Comment
            list:
                fields: ['id', 'post', { property: 'Workspace.name', label: 'Workspace' }, { property: 'Member.username', label: 'Member' }, { property: 'PostedOn', type: 'date' }]
        Price:
            class: Becowo\CoreBundle\Entity\Price
        FAQ:
            class: Becowo\CoreBundle\Entity\Faq
        FAQ_Category:
            class: Becowo\CoreBundle\Entity\FaqCategory
        Country:
            class: Becowo\CoreBundle\Entity\Country
        DistanceSearch:
            class: Becowo\CoreBundle\Entity\DistanceSearch
        Origin:
            class: Becowo\CoreBundle\Entity\Origin
        Prospect:
            class: Becowo\CoreBundle\Entity\Prospect
        WeekDay:
            class: Becowo\CoreBundle\Entity\WeekDay
            disabled_actions: ['new', 'edit', 'delete']
    design:
        menu:
            - label: 'Workspaces'
              children: ['Workspace', 'Workspace_Category', 'Workspace_Favorite', 'Picture', 'Office', 'Amenities', 'TeamMember', 'Price']
            - label: 'Booking'
              children: ['Booking', 'Booking_Status']
            - label: 'Members'
              children: ['Member', 'ProfilePicture', 'Prospect']
            - label: 'POI'
              children: ['Poi', 'Poi_Category']
            - label: 'Members input'
              children: ['Vote', 'Comment']
            - label: 'FAQ'
              children: ['FAQ', 'FAQ_Category']
            - label: 'Config'
              children: ['Country', 'DistanceSearch', 'Origin', 'WeekDay']


