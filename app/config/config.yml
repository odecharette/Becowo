imports:
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BecowoCoreBundle/Resources/config/services.yml" }
    - { resource: "@BecowoMemberBundle/Resources/config/services.yml" }
    - { resource: "@BecowoManagerBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    tva: 20
    # config pour le paiement via e-transactions du Crédit Agricole
    # Config de test public TO DO mettre la config de pre-prod puis prod
    creditAgricole:
        PBX_SITE: 1999887
        PBX_RANG: 32
        PBX_IDENTIFIANT: 213
        PBX_DEVISE: 978
        PBX_RETOUR: Montant:M;Ref:R;call_number:T;authorization_number:A;erreur:E;sign:K    #Le param K doit tjs être en dernier
        PBX_HASH: SHA512
        PBX_HMAC: 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
        PBX_EFFECTUE: "%site_url%/ws/paiement/effectue"
        PBX_ANNULE: "%site_url%/ws/paiement/annule"
        PBX_REFUSE: "%site_url%/ws/paiement/refuse"
        PBX_REPONDRE_A: "%site_url%/ws/paiement/ipn"

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        name: becowo_session  #https://insight.sensiolabs.com/what-we-analyse/symfony.request.session_cookie_default_name
    fragments:       ~
    http_method_override: true
    assets: ~
  

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'bootstrap_3_layout.html.twig'
    globals:
        tva: '%tva%'
        creditAgricole: '%creditAgricole%'
        kernelRootDir: '%kernel.root_dir%'
        site_url: '%site_url%'

services:
    twig.extension.intl:
       class: Twig_Extensions_Extension_Intl
       tags:
           - { name: twig.extension }
    authentication_handler:
        class: Becowo\MemberBundle\Handler\AuthenticationHandler
           
# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        server_version: 5.7.9  # Rend l'appli bootable pour sensiolabs insigth.
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    auth_mode: "%mailer_auth_mode%"
    host:      "%mailer_host%"
    port:      "%mailer_port%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    encryption: "%mailer_encryption%"
    spool:     { type: memory }

# FOSUser configuration
fos_user:
    db_driver:     orm                              # Le type de BDD à utiliser, nous utilisons l'ORM Doctrine depuis le début
    firewall_name: main                             # Le nom du firewall derrière lequel on utilisera ces utilisateurs
    user_class:    Becowo\MemberBundle\Entity\Member # La classe de l'entité User que nous utilisons
    profile:
        form:
            type: Becowo\MemberBundle\Form\Type\ProfileType
    from_email:
        address:        contact@becowo.com
        sender_name:    Becowo
    registration:
        confirmation:
            enabled:    true

# Elastic search configuration
# fos_elastica:
#     clients:
#         default: { host: localhost, port: 9200 }
#     serializer:
#         callback_class: FOS\ElasticaBundle\Serializer\Callback
#         serializer: serializer
#     indexes:
#         becowo:
#             index-name: becowo_%kernel.environment%
#             settings:
#                 index:
#                     analysis:
#                         analyzer:
#                             autocomplete_analyzer:
#                                 type: custom
#                                 tokenizer: autocomplete_tokenizer
#                                 filter: [lowercase, asciifolding]
#                         tokenizer:
#                             autocomplete_tokenizer:
#                                 type: nGram
#                                 min_gram: 3
#                                 max_gram: 20
#             types:
#                 workspace:
#                     mappings:
#                         name: { type: string, analyzer: autocomplete_analyzer }
#                     persistence:
#                         driver: orm
#                         model: Becowo\CoreBundle\Entity\Workspace
#                         provider:
#                             query_builder_method : findActiveWorkspaces
#                         listener: ~
#                         finder: ~

# vich/uploader-bundle / Easy to upload pictures
vich_uploader:
    db_driver: orm
    mappings:
        member_profile_picture:
            uri_prefix:         /images/ProfilePictures
            upload_destination: %kernel.root_dir%/../web/images/ProfilePictures

# EasyAdmin bundle
easy_admin:
    site_name: 'Becowo - Admin'
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'
    list:
        actions:
            - { name: 'show', icon: 'search', label: '' }
            - { name: 'edit', icon: 'pencil', label: '' }
            - { name: 'delete', icon: 'remove', label: '' }            
    entities:
        Workspace:
            class: Becowo\CoreBundle\Entity\Workspace
            list:
                fields: ['id', 'name', 'description', 'descriptionBonus', { property: 'website', type: 'url' }, 'isVisible', 'isDeleted']
        Workspace_has_office:
            class: Becowo\CoreBundle\Entity\WorkspaceHasOffice
        Workspace_has_offer:
            class: Becowo\CoreBundle\Entity\WorkspaceHasOffer
        Workspace_Category:
            class: Becowo\CoreBundle\Entity\WorkspaceCategory
        Workspace_Favorite:
            class: Becowo\CoreBundle\Entity\WorkspaceFavorite
            form:
                fields: ['workspace']
        Picture:
            class: Becowo\CoreBundle\Entity\Picture
        Office:
            class: Becowo\CoreBundle\Entity\Office
        Timetable:
            class: Becowo\CoreBundle\Entity\Timetable
        Booking:
            class: Becowo\CoreBundle\Entity\Booking
            list:
                fields:
                    - 'id'
                    - { property: 'workspace.name', label: 'Workspace' }
                    - { property: 'member.username', label: 'Member' }
                    - 'startDate'
                    - 'endDate'
                    - 'priceInclTax'
                    - 'priceExclTax'
                    - 'isFirstBook'
                    - { property: 'CreatedOn', type: 'datetime'}
        Booking_Status:
            class: Becowo\CoreBundle\Entity\Status
        Member:
            class: Becowo\MemberBundle\Entity\Member
            list:
                fields: ['id', 'username', 'firstName', 'name', { property: 'email', type: 'email' }, 'roles', 'profilePicture', 'lastLogin', 'enabled', 'locked']
            form:
                fields: 
                    - { property: 'username', type: 'text' }
                    - { property: 'firstName', type: 'text' }
                    - { property: 'name', type: 'text' }
                    - { property: 'email', type: 'email' }
                    - { property: 'plainPassword', type: 'password', label: 'Password' }
                    - { property: 'enabled', type: 'checkbox' }
                    - { property: 'locked', type: 'checkbox' }
                    - { property: 'workspace' }
                    - { property: 'roles' }
        ProfilePicture:
            class: Becowo\CoreBundle\Entity\ProfilePicture
            # TO DO corriger affichage image
            list:
                fields: ['id', { property: 'file', type: 'image', base_path: "% vich_uploader.mappings.member_profile_picture%"}, 'url', 'alt']
            form:
                fields: [{ property: 'url', format: 'image', base_path: '/images/ProfilePicture/' }, 'alt', { property: 'file', type: 'file', label: 'Upload Picture', help: 'Select file to upload' }]
        Poi:
            class: Becowo\CoreBundle\Entity\Poi
        Poi_Category:
            class: Becowo\CoreBundle\Entity\PoiCategory
        Amenities:
            class: Becowo\CoreBundle\Entity\Amenities
        TeamMember:
            class: Becowo\CoreBundle\Entity\TeamMember
        Vote:
            class: Becowo\CoreBundle\Entity\Vote
        Comment:
            class: Becowo\CoreBundle\Entity\Comment
            list:
                fields: ['id', 'post', { property: 'Workspace.name', label: 'Workspace' }, { property: 'Member.username', label: 'Member' }, { property: 'PostedOn', type: 'date' }]
        Price:
            class: Becowo\CoreBundle\Entity\Price
        FAQ:
            class: Becowo\CoreBundle\Entity\Faq
        FAQ_Category:
            class: Becowo\CoreBundle\Entity\FaqCategory
        Country:
            class: Becowo\CoreBundle\Entity\Country
        DistanceSearch:
            class: Becowo\CoreBundle\Entity\DistanceSearch
        Origin:
            class: Becowo\CoreBundle\Entity\Origin
        Prospect:
            class: Becowo\CoreBundle\Entity\Prospect
        WeekDay:
            class: Becowo\CoreBundle\Entity\WeekDay
            disabled_actions: ['new', 'edit', 'delete']
    design:
        menu:
            - label: 'Workspaces'
              children: ['Workspace', 'Workspace_has_office', 'Workspace_Category', 'Workspace_Favorite', 'Workspace_has_offer', 'Picture', 'Amenities', 'TeamMember', 'Price', 'Timetable']
            - label: 'Booking'
              children: ['Booking', 'Booking_Status']
            - label: 'Members'
              children: ['Member', 'ProfilePicture', 'Prospect']
            - label: 'POI'
              children: ['Poi', 'Poi_Category']
            - label: 'Members input'
              children: ['Vote', 'Comment']
            - label: 'FAQ'
              children: ['FAQ', 'FAQ_Category']
            - label: 'Config'
              children: ['Office', 'Country', 'DistanceSearch', 'Origin', 'WeekDay']

# Google chart / CMENGoogleChartsBundle 
cmen_google_charts:
    version: "1"
    language: 'fr'
# Algolia / Search engine
algolia:
    application_id: 00DM9QCAA8
    api_key: b0c4cf24413e5ab11db9e46923c790f4
    catch_log_exceptions: true

# HWIOAuthBundle
hwi_oauth:
    # list of names of the firewalls in which this bundle is active, this setting MUST be set
    firewall_names: [secured_area]
    # an optional setting to configure a query string parameter which can be used to redirect
    # the user after authentication, e.g. /connect/facebook?_destination=/my/destination will
    # redirect the user to /my/destination after facebook authenticates them.  If this is not
    # set then the user will be redirected to the original resource that they requested, or
    # the base address if no resource was requested.  This is similar to the behaviour of
    # [target_path_parameter for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html).
    # target_path_parameter: _destination

    # an optional setting to use the HTTP REFERER header to be used in case no
    # previous URL was stored in the session (i.e. no resource was requested).
    # This is similar to the behaviour of
    # [using the referring URL for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html#using-the-referring-url).
    # use_referer: true
    
    connect:
        account_connector: app.HWIOAuth.user_provider
    firewall_names:
        - 'secured_area' # name of security firewall configured to work with HWIOAuthBundle
    fosub:
        username_iterations: 30
        properties:
            facebook:    facebook_id
    resource_owners:
        facebook:
            type:                facebook
            client_id:           810073549123890
            client_secret:       3ff160395ef3c562838c64187684ecf3
            infos_url:     "https://graph.facebook.com/me?fields=id,middle_name,first_name,last_name,name,email,picture.type(square)"
            scope:  email
            paths:
                email:          email
                profilepicture: picture.data.url
                realname:  ["middle_name", "last_name"]
            options:
                display: popup
                auth_type: rerequest # Re-asking for Declined Permissions
                # csrf: true
        linkedin:
            type:           linkedin
            client_id:      779agcgijedscy
            client_secret:  Q3q0A7pbEPQxHzgk
            infos_url:      "https://api.linkedin.com/v1/people/~:(id,formatted-name,first-name,last-name,location,positions,headline,email-address,public-profile-url,picture-url)?format=json"
            scope:          "r_basicprofile,r_emailaddress"
        twitter:
            type:                twitter
            client_id:           Dh1p53EN2cVjULRJuVGeRr8Bq
            client_secret:       JmBhMZlaFDri3em02uhJ9f2CTkunY7QQXFCRd22SSWmHRKeerN
            options:
                include_email: true
            
